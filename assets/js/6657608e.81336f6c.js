"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7096],{3180:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=t(1948),s=t(3460);const o={sidebar_position:4,description:"How to request and access to a LOC."},l="Legal Officer Case (LOC)",c={id:"client/loc",title:"Legal Officer Case (LOC)",description:"How to request and access to a LOC.",source:"@site/docs/client/loc.md",sourceDirName:"client",slug:"/client/loc",permalink:"/logion-api/docs/client/loc",draft:!1,unlisted:!1,editUrl:"https://github.com/logion-network/logion-api/tree/main/website/docs/client/loc.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"How to request and access to a LOC."},sidebar:"tutorialSidebar",previous:{title:"Balance and Transactions",permalink:"/logion-api/docs/client/balance-transactions"},next:{title:"Protection and Recovery",permalink:"/logion-api/docs/client/protection"}},r={},d=[{value:"State",id:"state",level:2},{value:"Lifecycle",id:"lifecycle",level:2},{value:"Identity LOC",id:"identity-loc",level:2},{value:"Request",id:"request",level:3},{value:"Add items",id:"add-items",level:3},{value:"Submit",id:"submit",level:3},{value:"After review",id:"after-review",level:3},{value:"Transaction LOC",id:"transaction-loc",level:2},{value:"Request",id:"request-1",level:3},{value:"Collection LOC",id:"collection-loc",level:2},{value:"Request",id:"request-2",level:3},{value:"Direct LOC opening",id:"direct-loc-opening",level:2},{value:"Queries",id:"queries",level:2},{value:"Querying requests",id:"querying-requests",level:3},{value:"Querying LOCs",id:"querying-locs",level:3},{value:"Accessing a LOC&#39;s data",id:"accessing-a-locs-data",level:3},{value:"Collection Items",id:"collection-items",level:2},{value:"Collection WITHOUT upload support",id:"collection-without-upload-support",level:3},{value:"Collection WITH upload support",id:"collection-with-upload-support",level:3},{value:"Collection with restricted delivery",id:"collection-with-restricted-delivery",level:3},{value:"Terms and Conditions",id:"terms-and-conditions",level:3},{value:"Tokens Records",id:"tokens-records",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"legal-officer-case-loc",children:"Legal Officer Case (LOC)"}),"\n",(0,i.jsx)(n.p,{children:"A LOC is an encrypted and decentralized digital folder containing public and private data.\nIts content is reviewed and signed by a Logion Legal Officer (LLO),\nan individual operating under a strict legal framework."}),"\n",(0,i.jsx)(n.p,{children:"This section is about how to manager your LOCs."}),"\n",(0,i.jsx)(n.h2,{id:"state",children:"State"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.a,{href:"/logion-api/docs/client/authentication",children:"authenticated client"})," is necessary for all LOC operations."]})}),"\n",(0,i.jsx)(n.p,{children:"The global state of LOCs can be obtained (and later on, refreshed) with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const locsState = await client.locsState();\nconst refreshedState = await locsState.refresh();\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["All user operations (",(0,i.jsx)(n.code,{children:"requestTransactionLoc"}),", ",(0,i.jsx)(n.code,{children:"requestCollectionLoc"}),", etc.), as well as ",(0,i.jsx)(n.code,{children:"refresh"}),", do return a new state.\nAlways use the most recent state, and discard the former state.\nIn the example above, the var ",(0,i.jsx)(n.code,{children:"locsState"})," must not be used any more as soon as ",(0,i.jsx)(n.code,{children:"refreshedState"})," is available."]})}),"\n",(0,i.jsx)(n.h2,{id:"lifecycle",children:"Lifecycle"}),"\n",(0,i.jsxs)(n.p,{children:["In below diagram, replace ",(0,i.jsx)(n.code,{children:"___"})," by a LOC type. The process is the same for all LOC types."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Identity Loc State",src:t(4376).c+"",width:"665",height:"1118"})}),"\n",(0,i.jsx)(n.h2,{id:"identity-loc",children:"Identity LOC"}),"\n",(0,i.jsx)(n.h3,{id:"request",children:"Request"}),"\n",(0,i.jsx)(n.p,{children:"An Identity LOC is requested this way:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const draftRequest = await locsState.requestIdentityLoc({\n    legalOfficer: alice,\n    description: "This is an Identity LOC",\n    userIdentity: {\n        email: "john.doe@invalid.domain",\n        firstName: "John",\n        lastName: "Doe",\n        phoneNumber: "+1234",\n    },\n    userPostalAddress: {\n        line1: "Peace Street",\n        line2: "2nd floor",\n        postalCode: "10000",\n        city: "MyCity",\n        country: "Wonderland"\n    },\n    draft: true,\n    legalFee: Lgnt.from(160),\n});\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["The default legal fee for an identity\nLOC is 160 LGNTs. Another value of ",(0,i.jsx)(n.code,{children:"legalFee"})," should have been discussed with the LLO beforehand,\notherwise it may reject the LOC."]})}),"\n",(0,i.jsx)(n.h3,{id:"add-items",children:"Add items"}),"\n",(0,i.jsx)(n.p,{children:"You may add metadata (i.e. public name-value pairs), private files and links (to other LOCs) to your LOC."}),"\n",(0,i.jsx)(n.p,{children:"Metadata can be added to, or removed from, a draft LOC:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="addMetadata"',children:'draftRequest = await draftRequest.addMetadata({\n    name: "Some name",\n    value: "Some value"\n});\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="deleteMetadata"',children:'draftRequest = await draftRequest.deleteMetadata({\n    name: "Some name"\n});\n'})}),"\n",(0,i.jsx)(n.h3,{id:"submit",children:"Submit"}),"\n",(0,i.jsx)(n.p,{children:"When done, the request must be submitted to the LLO for review:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const pendingRequest = await draftRequest.submit();\n"})}),"\n",(0,i.jsx)(n.h3,{id:"after-review",children:"After review"}),"\n",(0,i.jsx)(n.p,{children:"If the LLO accepted your LOC, you can proceed and publish it:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const acceptedRequest = await pendingRequest.refresh() as AcceptedRequest;\nconst openLoc = await acceptedRequest.open({ signer, autoPublish: true });\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you set ",(0,i.jsx)(n.code,{children:"autoPublish"})," to false, you'll have to manually publish each item\nmanually after the call to open."]}),"\n",(0,i.jsx)(n.p,{children:"After everything has been published, just wait for the LLO to close the LOC:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const closedLoc = await openLoc.refresh() as ClosedLoc;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"transaction-loc",children:"Transaction LOC"}),"\n",(0,i.jsx)(n.h3,{id:"request-1",children:"Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const draftRequest = await locsState.requestTransactionLoc({\n    legalOfficer: alice,\n    description: "This is a Transaction LOC",\n    draft: true,\n    legalFee: Lgnt.from(2000),\n});\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["The default legal fee for a transaction\nLOC is 2000 LGNTs. Another value of ",(0,i.jsx)(n.code,{children:"legalFee"})," should have been discussed with the LLO beforehand,\notherwise the LLO may reject the LOC."]})}),"\n",(0,i.jsx)(n.h2,{id:"collection-loc",children:"Collection LOC"}),"\n",(0,i.jsx)(n.h3,{id:"request-2",children:"Request"}),"\n",(0,i.jsx)(n.p,{children:"When requesting a Collection LOC, additional parameters have to be provided."}),"\n",(0,i.jsxs)(n.p,{children:["Note that at least one of ",(0,i.jsx)(n.code,{children:"lastBlockSubmission"})," and ",(0,i.jsx)(n.code,{children:"maxSize"})," have to be defined."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const draftRequest = await locsState.requestCollectionLoc({\n    legalOfficer: alice,\n    description: "This is a Collection LOC",\n    draft: true,\n    legalFee: Lgnt.from(2000),\n    valueFee: Lgnt.zero(),\n    collectionItemFee: Lgnt.zero(),\n    tokensRecordFee: Lgnt.zero(),\n    collectionParams: {\n        lastBlockSubmission: 100000n,\n        maxSize: 9999,\n        canUpload: true,\n    }\n});\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["The default legal fee for a collection LOC is 2000 LGNTs. Another value\nof ",(0,i.jsx)(n.code,{children:"legalFee"})," should be discussed with the LLO beforehands,\nthis also applies to ",(0,i.jsx)(n.code,{children:"valueFee"}),", ",(0,i.jsx)(n.code,{children:"collectionItemFee"}),", ",(0,i.jsx)(n.code,{children:"tokensRecordFee"})," and the collection\nparameters. Otherwise the LLO may reject the LOC."]})}),"\n",(0,i.jsx)(n.h2,{id:"direct-loc-opening",children:"Direct LOC opening"}),"\n",(0,i.jsx)(n.p,{children:"In order to bypass the review process, one can directly create and publish a LOC and its\nitems in a single call and signature:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const openLoc = await locsState.openIdentityLoc({\n    description: "This is an Identity LOC",\n    legalOfficerAddress: alice.address,\n    files,\n    metadata,\n    links,\n    userIdentity: {\n        email: "john.doe@invalid.domain",\n        firstName: "John",\n        lastName: "Doe",\n        phoneNumber: "+1234",\n    },\n    userPostalAddress: {\n        line1: "Peace Street",\n        line2: "2nd floor",\n        postalCode: "10000",\n        city: "MyCity",\n        country: "Wonderland"\n    },\n    signer\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Methods ",(0,i.jsx)(n.code,{children:"openTransactionLoc"})," and ",(0,i.jsx)(n.code,{children:"openCollectionLoc"})," can also be used. ",(0,i.jsx)(n.code,{children:"openCollection"})," will\nrequire the additional fields (see ",(0,i.jsx)(n.code,{children:"requestCollectionLoc"}),")."]}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsx)(n.p,{children:'You have to make sure that the LLO agrees to close the LOCs directly opened this way.\nIf he doesn\'t, he may never close or even void your LOC. In that case, you\nwill "lose" (i.e. there is no refund) the LGNTs paid so far for the creation of the LOC.'})}),"\n",(0,i.jsx)(n.h2,{id:"queries",children:"Queries"}),"\n",(0,i.jsx)(n.h3,{id:"querying-requests",children:"Querying requests"}),"\n",(0,i.jsx)(n.p,{children:"Pending and rejected requests can be queried:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const type: LocType = 'Transaction'; // could be 'Collection' or 'Identity'\nconst pendingRequests = locsState.pendingRequests[type];\nconst rejectedRequests = locsState.rejectedRequests[type];\n"})}),"\n",(0,i.jsx)(n.h3,{id:"querying-locs",children:"Querying LOCs"}),"\n",(0,i.jsx)(n.p,{children:"Similarly, LOC's can be queried according to their state:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const type: LocType = 'Transaction'; // could be 'Collection' or 'Identity'\nconst openLocs = locsState.openLocs[type];\nconst closedLocs = locsState.closedLocs[type];\nconst voidedLocs = locsState.voidedLocs[type];\n"})}),"\n",(0,i.jsx)(n.h3,{id:"accessing-a-locs-data",children:"Accessing a LOC's data"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const locData: LocData = locsState.openLocs["Identity"][0].data();\nconst userIdentity = locData.userIdentity; // Only set on identity LOCs\nconsole.log("Identity of %s: %s %s %s %s", \n    locData.requesterAddress, \n    userIdentity?.firstName, \n    userIdentity?.lastName, \n    userIdentity?.email, \n    userIdentity?.phoneNumber\n);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"collection-items",children:"Collection Items"}),"\n",(0,i.jsx)(n.p,{children:"When creating a Collection LOC, the collection parameters tell if it supports file upload or not."}),"\n",(0,i.jsx)(n.h3,{id:"collection-without-upload-support",children:"Collection WITHOUT upload support"}),"\n",(0,i.jsx)(n.p,{children:"Add an item to the collection:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Add Item"',children:'const itemId = Hash.of("first-collection-item");\nconst itemDescription = "First collection item";\nclosedLoc = await closedLoc.addCollectionItem({\n    payload: {\n        itemId,\n        itemDescription,\n    },\n    signer,\n});\n'})}),"\n",(0,i.jsx)(n.p,{children:"Later on, you can retrieve the item with its ID:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Get an Item"',children:"const item = await closedLoc.getCollectionItem({ itemId });\n"})}),"\n",(0,i.jsx)(n.h3,{id:"collection-with-upload-support",children:"Collection WITH upload support"}),"\n",(0,i.jsx)(n.p,{children:'A collection item may have attached files if the collection permits it. The files are then stored in logion\'s private IPFS network\nensuring their availability over time. If a controlled delivery for attached files is needed, see "Collection with restricted delivery"\nbelow.'}),"\n",(0,i.jsx)(n.p,{children:"There are 2 possibilities when attaching files to an item:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"immediate upload of the files upon item creation or"}),"\n",(0,i.jsx)(n.li,{children:"item creation followed by an explicit upload later on."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"See the examples below."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Add Item and provide file content"',children:'const itemId = Hash.of("first-collection-item");\nconst itemDescription = "First collection item";\nclosedLoc = await closedLoc.addCollectionItem({\n    payload: {\n        itemId,\n        itemDescription,\n        itemFiles: [\n            HashOrContent.fromContent(\n                new NodeFile("integration/test.txt", "test.txt", MimeType.from("text/plain"))\n            ), // Let SDK compute hash and size\n        ],\n    },\n    signer,\n});\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Add Item and provide hash and size"',children:'const itemId = Hash.of("first-collection-item");\nconst itemDescription = "First collection item";\nconst file = HashOrContent.fromContentFinalized(\n    new NodeFile("integration/test.txt", "test.txt", MimeType.from("text/plain"))\n);\nclosedLoc = await closedLoc.addCollectionItem({\n    payload: {\n        itemId,\n        itemDescription,\n        itemFiles: [\n            HashOrContent.fromDescription({\n                name: file.name,\n                hash: file.contentHash,\n                size: file.size,\n                mimeType: file.mimeType,\n            }),\n        ]\n    },\n    signer,\n});\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Upload file for an existing item"',children:"closedLoc = await closedLoc.uploadCollectionItemFile({\n    itemId,\n    itemFile: file,\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"collection-with-restricted-delivery",children:"Collection with restricted delivery"}),"\n",(0,i.jsx)(n.p,{children:'A collection item with restricted delivery requires a token definition i.e. the "address" of the token\nwhich opens access to the underlying files when owned. Below an example where the underlying files\nwill be delivered to the owner of an ERC-721 token on Ethereum Mainnet.'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Add Item with restricted delivery"',children:'const itemId = generateEthereumTokenItemId("202210131750", "4391");\nconst itemDescription = "First collection item";\nconst itemToken: ItemTokenWithRestrictedType = {\n    type: "ethereum_erc721",\n    id: \'{"contract":"0x765df6da33c1ec1f83be42db171d7ee334a46df5","id":"4391"}\'\n};\nconst file = HashOrContent.fromContent(\n    new NodeFile("integration/test.txt", "test.txt", MimeType.from("text/plain"))\n);\nclosedLoc = await closedLoc.addCollectionItem({\n    payload: {\n        itemId: firstItemId,\n        itemDescription: firstItemDescription,\n        itemFiles: [ file ],\n        itemToken,\n        restrictedDelivery: true,\n    },\n    signer,\n});\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"danger",children:[(0,i.jsxs)(n.p,{children:["In the above example, the item ID is generated using function ",(0,i.jsx)(n.code,{children:"generateEthereumTokenItemId"}),". This ensures that the item ID\nmatches the one computed by the ",(0,i.jsx)(n.a,{href:"https://github.com/logion-network/logion-solidity/blob/main/contracts/Logion.sol",children:"Logion Smart Contract"}),".\n",(0,i.jsx)(n.strong,{children:"This is very important because otherwise, the bidirectional link between the item and its token would be broken.\nThe nonce parameter must match the one in the Smart Contract."})]}),(0,i.jsx)(n.p,{children:"One may consider not using the Logion Smart Contract, leaving the choice of the item ID completely open, but this is not recommended."})]}),"\n",(0,i.jsx)(n.p,{children:"This is the list of supported token types:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"ethereum_erc721"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"ethereum_erc1155"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"goerli_erc721"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"goerli_erc1155"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"singular_kusama"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"polygon_erc721"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"polygon_erc1155"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"polygon_mumbai_erc721"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"polygon_mumbai_erc1155"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"ethereum_erc20"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"goerli_erc20"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"polygon_erc20"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"polygon_mumbai_erc20"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"multiversx_devnet_esdt"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"multiversx_testnet_esdt"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"multiversx_esdt"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"astar_psp34"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"astar_shiden_psp34"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"astar_shibuya_psp34"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The format of ",(0,i.jsx)(n.code,{children:"id"})," field depends on the token type:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["With types ",(0,i.jsx)(n.code,{children:"astar_*_psp34"}),", ",(0,i.jsx)(n.code,{children:"*_erc721"})," and ",(0,i.jsx)(n.code,{children:"*_erc1155"}),", the ",(0,i.jsx)(n.code,{children:"id"})," field must be a valid JSON object with 2 fields: ",(0,i.jsx)(n.code,{children:"contract"})," and ",(0,i.jsx)(n.code,{children:"id"}),". Both fields are strings:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"contract"})," is the address of the Smart Contract of the token."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," is the token ID as assigned by the Smart Contract."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["With types ",(0,i.jsx)(n.code,{children:"*_erc20"}),", the ",(0,i.jsx)(n.code,{children:"id"})," field must be a valid JSON object with a single ",(0,i.jsx)(n.code,{children:"contract"})," fields:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"contract"})," is the address of the Smart Contract of the token."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["With ",(0,i.jsx)(n.code,{children:"multiversx_*"})," types, ",(0,i.jsx)(n.code,{children:"id"})," is a string representing the ID of an ESDT token."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"terms-and-conditions",children:"Terms and Conditions"}),"\n",(0,i.jsxs)(n.p,{children:["Terms and conditions can be added to the collection item, using either the Logion classification,\na set of ",(0,i.jsx)(n.code,{children:"SpecificLicense"}),"s, or both."]}),"\n",(0,i.jsxs)(n.p,{children:["If using a specific license, a valid closed Transaction LOC defining the license must exist\n(referred as ",(0,i.jsx)(n.code,{children:"specificLicenseLocId"})," in the example below)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const itemId = Hash.of("first-collection-item");\nconst itemDescription = "First collection item";\nconst file = HashOrContent.fromContent(\n    new NodeFile("integration/test.txt", "test.txt", MimeType.from("text/plain"))\n);\nclosedLoc = await closedLoc.addCollectionItem({\n    payload: {\n        itemId,\n        itemDescription,\n        itemFiles: [ file ],\n        logionClassification: {\n            regionalLimit: [ "BE", "FR", "LU" ],\n            transferredRights: [ "PER-PRIV", "REG", "TIME" ],\n            expiration: "2025-01-01",\n        },\n        specificLicenses: [\n            new SpecificLicense(specificLicenseLocId, "Some details about the license"),\n        ]\n    },\n    signer,\n});\n'})}),"\n",(0,i.jsx)(n.admonition,{title:"Logion Classification",type:"note",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The Logion Classification allows to define a set of ",(0,i.jsx)(n.code,{children:"transferredRights"})," to define precisely the scope of the terms and conditions.\nAll possible transferred rights are available in the ",(0,i.jsx)(n.code,{children:"logionLicenseItems"})," array."]}),"\n",(0,i.jsxs)(n.li,{children:["With the code ",(0,i.jsx)(n.code,{children:"TIME"})," it is possible to limit the right in time by setting the parameter ",(0,i.jsx)(n.code,{children:"expiration"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["With the code ",(0,i.jsx)(n.code,{children:"REG"})," it is possible to limit to some countries/regions with the parameter ",(0,i.jsx)(n.code,{children:"regionalLimit"}),"."]}),"\n"]})}),"\n",(0,i.jsx)(n.h2,{id:"tokens-records",children:"Tokens Records"}),"\n",(0,i.jsx)(n.p,{children:"A tokens record has attached files. The files are then stored in Logion's private IPFS network\nensuring their availability over time."}),"\n",(0,i.jsx)(n.p,{children:"As for collection items, there are 2 possibilities when attaching files:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"immediate upload of the files on creation or"}),"\n",(0,i.jsx)(n.li,{children:"creation followed by an explicit upload later on."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"See the examples below."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Add record and provide file content"',children:'const recordId = Hash.of("record-id");\nconst recordDescription = "Some tokens record";\nconst file = HashOrContent.fromContent(\n    new NodeFile("integration/test.txt", "report.txt", MimeType.from("text/plain"))\n);\nclosedLoc = await closedLoc.addTokensRecord({\n    payload: {\n        recordId,\n        description: recordDescription,\n        files: [ file ],\n    },\n    signer,\n});\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Add record and provide description only"',children:'const recordId = Hash.of("record-id");\nconst recordDescription = "Some tokens record";\nconst file = HashOrContent.fromContentFinalized(\n    new NodeFile("integration/test.txt", "report.txt", MimeType.from("text/plain"))\n);\nclosedLoc = await closedLoc.addTokensRecord({\n    payload: {\n        recordId,\n        description: recordDescription,\n        files: [\n            HashOrContent.fromDescription({\n                name: file.name,\n                hash: file.contentHash,\n                size: file.size,\n                mimeType: file.mimeType,\n            }),\n        ],\n    },\n    signer,\n});\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Upload file for an existing record"',children:"closedLoc = await closedLoc.uploadTokensRecordFile({\n    recordId,\n    file,\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},4376:(e,n,t)=>{t.d(n,{c:()=>i});const i=t.p+"assets/images/identity-loc-state-865cc54c6d7bb97dbec3f5ffbf54b7dc.png"},3460:(e,n,t)=>{t.d(n,{I:()=>c,M:()=>l});var i=t(6952);const s={},o=i.createContext(s);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);