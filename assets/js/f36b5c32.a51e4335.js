"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[662],{5318:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(7378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(a),f=r,v=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return a?n.createElement(v,c(c({ref:t},p),{},{components:a})):n.createElement(v,c({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<o;s++)c[s]=a[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6489:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=a(5773),r=a(808),o=(a(7378),a(5318)),c=["components"],i={sidebar_position:3,description:"How to protect/recover a Polkadot account, and access the vault."},l="Protection and Recovery",s={unversionedId:"client/protection",id:"client/protection",title:"Protection and Recovery",description:"How to protect/recover a Polkadot account, and access the vault.",source:"@site/docs/client/protection.md",sourceDirName:"client",slug:"/client/protection",permalink:"/logion-api/docs/client/protection",draft:!1,editUrl:"https://github.com/logion-network/logion-api/tree/main/website/docs/client/protection.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"How to protect/recover a Polkadot account, and access the vault."},sidebar:"tutorialSidebar",previous:{title:"Balance and Transactions",permalink:"/logion-api/docs/client/balance-transactions"},next:{title:"Legal Officer Case (LOC)",permalink:"/logion-api/docs/client/loc"}},p={},u=[{value:"State",id:"state",level:2},{value:"Protection",id:"protection",level:2},{value:"Overview of the whole process",id:"overview-of-the-whole-process",level:3},{value:"Choose legal officers",id:"choose-legal-officers",level:3},{value:"Request a protection",id:"request-a-protection",level:3},{value:"Activate the protection",id:"activate-the-protection",level:3},{value:"Rejection Management",id:"rejection-management",level:3},{value:"Vault",id:"vault",level:2},{value:"Transfer from vault",id:"transfer-from-vault",level:3},{value:"Transfer to vault",id:"transfer-to-vault",level:3},{value:"Check vault balance",id:"check-vault-balance",level:3},{value:"Recovery",id:"recovery",level:2},{value:"Overview of the whole process",id:"overview-of-the-whole-process-1",level:3},{value:"Request a recovery",id:"request-a-recovery",level:3},{value:"Activate the new protection",id:"activate-the-new-protection",level:3},{value:"Claim the recovery",id:"claim-the-recovery",level:3},{value:"Recover the lost balance",id:"recover-the-lost-balance",level:3},{value:"Recover the lost vault",id:"recover-the-lost-vault",level:3},{value:"Rejection Management",id:"rejection-management-1",level:3}],d={toc:u};function f(e){var t=e.components,i=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"protection-and-recovery"},"Protection and Recovery"),(0,o.kt)("h2",{id:"state"},"State"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"An ",(0,o.kt)("a",{parentName:"p",href:"/logion-api/docs/client/authentication"},"authenticated client")," is necessary for protection/recovery operations.")),(0,o.kt)("p",null,"The global state of protection or recovery can be obtained (and later on, refreshed) with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const protectionState = await authenticatedClient.protectionState();\nconst refreshedState = await protectionState.refresh();\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"All user operations (",(0,o.kt)("inlineCode",{parentName:"p"},"requestProtection"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"activate"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"cancel"),", etc.), as well as ",(0,o.kt)("inlineCode",{parentName:"p"},"refresh"),", do return a new state.\nAlways use the most recent state, and discard the former state.\nIn the example above, the var ",(0,o.kt)("inlineCode",{parentName:"p"},"protectionState")," must not be used any more as soon as ",(0,o.kt)("inlineCode",{parentName:"p"},"refreshedState")," is available.")),(0,o.kt)("h2",{id:"protection"},"Protection"),(0,o.kt)("p",null,"The setup of a Polkadot account protection is a 3-steps process:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Choose 2 officers")," among the official list of Logion Legal Officers."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Request")," the protection towards those 2 LO's."),(0,o.kt)("li",{parentName:"ul"},"Upon acceptance, ",(0,o.kt)("strong",{parentName:"li"},"activate")," the protection on the chain.")),(0,o.kt)("h3",{id:"overview-of-the-whole-process"},"Overview of the whole process"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Protection State Diagram",src:a(9214).Z,width:"749",height:"665"})),(0,o.kt)("h3",{id:"choose-legal-officers"},"Choose legal officers"),(0,o.kt)("p",null,"The following call accesses the configured ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/logion-network/logion-directory"},"logion-directory"),"\nto retrieve the list of available Legal Officers. A protection requires the user to choose 2 distinct Legal Officers\n(in this sample Alice and Bob are selected)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const legalOfficers: LegalOfficer[] = authenticatedClient.getLegalOfficers();\n\nconst alice = legalOfficers[0];\nconst bob = legalOfficers[1];\n")),(0,o.kt)("h3",{id:"request-a-protection"},"Request a protection"),(0,o.kt)("p",null,"You can submit your protection requests to the selected officers: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const noProtection = await authenticatedClient.protectionState() as NoProtection;\nconst pending = await noProtection.requestProtection({\n    legalOfficer1: alice,\n    legalOfficer2: bob,\n    userIdentity: {\n        email: "john.doe@invalid.domain",\n        firstName: "John",\n        lastName: "Doe",\n        phoneNumber: "+1234",\n    },\n    postalAddress: {\n        city: "",\n        country: "",\n        line1: "",\n        line2: "",\n        postalCode: "",\n    }\n});\n')),(0,o.kt)("h3",{id:"activate-the-protection"},"Activate the protection"),(0,o.kt)("p",null,"You must first wait for both Legal Officers acceptance, and then activate the protection:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const accepted = (await pending.refresh()) as AcceptedProtection;\n\naccepted.activate(signer);\n")),(0,o.kt)("p",null,"In case of refusal of one or both Legal Officers, the refreshed state will be ",(0,o.kt)("inlineCode",{parentName:"p"},"RejectedProtection"),"."),(0,o.kt)("h3",{id:"rejection-management"},"Rejection Management"),(0,o.kt)("p",null,"If rejected by one or more Legal Officer, you may either"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Resubmit the request to the officer who rejected,"),(0,o.kt)("li",{parentName:"ul"},"Or replace him/her with a new Legal Officer,"),(0,o.kt)("li",{parentName:"ul"},"Or completely cancel your protection request.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Resubmit to LO who rejected"',title:'"Resubmit',to:!0,LO:!0,who:!0,'rejected"':!0},'let rejectedProtection = (await authenticatedClient.protectionState()) as RejectedProtection;\nconst rejecter = rejectedProtection.protectionParameters.states.find(state => state.status === "REJECTED")!.legalOfficer;\nrejectedProtection.resubmit(rejecter);\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Replace LO who rejected with Charlie"',title:'"Replace',LO:!0,who:!0,rejected:!0,with:!0,'Charlie"':!0},'let rejectedProtection = (await authenticatedClient.protectionState()) as RejectedProtection;\nconst rejecter = rejectedProtection.protectionParameters.states.find(state => state.status === "REJECTED")!.legalOfficer;\nconst charlie: LegalOfficer = ...;\nrejectedProtection.changeLegalOfficer(rejecter, charlie);\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Cancel the protection request"',title:'"Cancel',the:!0,protection:!0,'request"':!0},"let rejectedProtection = (await authenticatedClient.protectionState()) as RejectedProtection;\nrejectedProtection.cancel();\n")),(0,o.kt)("h2",{id:"vault"},"Vault"),(0,o.kt)("p",null,"Operations require an activated protection (see above ",(0,o.kt)("a",{parentName:"p",href:"#protection"},"Protection Request"),")"),(0,o.kt)("h3",{id:"transfer-from-vault"},"Transfer from vault"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'let activeProtection = (await authenticatedClient.protectionState()) as ActiveProtection;\n\nlet vaultState = await activeProtection.vaultState();\nconst vaultAddress = vaultState.vaultAddress;\nvaultState = await vaultState.createVaultTransferRequest({\n    legalOfficer: alice,\n    amount: new PrefixedNumber("1", NONE),\n    destination: REQUESTER_ADDRESS,\n    signer\n});\nconst pendingRequest = vaultState.pendingVaultTransferRequests[0];\n')),(0,o.kt)("h3",{id:"transfer-to-vault"},"Transfer to vault"),(0,o.kt)("p",null,"A transfer to the vault is similar to any other ",(0,o.kt)("a",{parentName:"p",href:"balance-transactions#transfer"},"transfer"),".\nSimply use ",(0,o.kt)("inlineCode",{parentName:"p"},"vaultState.vaultAddress")," as destination."),(0,o.kt)("h3",{id:"check-vault-balance"},"Check vault balance"),(0,o.kt)("p",null,"You must fist wait for one Legal Officer acceptance, and then see the effect of the transfer on the vault balance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'vaultState = await vaultState.refresh();\n\nconst balance = vaultState.balances[0];\nconsole.log("Balance :%s", `${balance.balance.coefficient.toInteger()}.${balance.balance.coefficient.toFixedPrecisionDecimals(2)}${balance.balance.prefix.symbol}`)\n')),(0,o.kt)("h2",{id:"recovery"},"Recovery"),(0,o.kt)("p",null,"In order to recover a previously protected account, you must first create a new Polkadot account. Then follow these 3-stpes process:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Request a recovery")," to the Legal Officers who protected the lost account."),(0,o.kt)("li",{parentName:"ul"},"Upon acceptance and vouching of the recovery, ",(0,o.kt)("strong",{parentName:"li"},"activate")," the protection (of the new account) on the chain."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Claim")," the recovery.")),(0,o.kt)("p",null,"One claimed, you can recover the lost assets."),(0,o.kt)("h3",{id:"overview-of-the-whole-process-1"},"Overview of the whole process"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Recovery State Diagram",src:a(4873).Z,width:"633",height:"782"})),(0,o.kt)("h3",{id:"request-a-recovery"},"Request a recovery"),(0,o.kt)("p",null,"Recovery must be requested to the ",(0,o.kt)("strong",{parentName:"p"},"same Legal Officers")," who accepted to protect the lost account (in this case, Alice and Bob)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const NEW_ADDRESS = "5GsxAu1XexDATCbDJbWxKSow4gdC6epkajZr7Ht8Ci9VZabV";\n\nconst authenticatedClient = await LogionClient.create({\n    rpcEndpoints: [ \'wss://rpc01.logion.network\' ], // A list of websocket endpoints\n    directoryEndpoint: \'https://directory.logion.network\' // A logion directory\n}).authenticate([ NEW_ADDRESS ], signer);\n\nconst noProtection = await authenticatedClient.protectionState() as NoProtection;\nconst pending = await noProtection.requestRecovery({\n    recoveredAddress: REQUESTER_ADDRESS,\n    signer,\n    legalOfficer1: alice,\n    legalOfficer2: bob,\n    userIdentity: {\n        email: "john.doe@invalid.domain",\n        firstName: "John",\n        lastName: "Doe",\n        phoneNumber: "+1234",\n    },\n    postalAddress: {\n        city: "",\n        country: "",\n        line1: "",\n        line2: "",\n        postalCode: "",\n    }\n});\n\n')),(0,o.kt)("h3",{id:"activate-the-new-protection"},"Activate the new protection"),(0,o.kt)("p",null,"You must first wait for LO's acceptance and vouching, and then activate the new protection:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const accepted = (await pending.refresh()) as AcceptedProtection;\n\nlet pendingRecovery = await accepted.activate(signer) as PendingRecovery;\n")),(0,o.kt)("h3",{id:"claim-the-recovery"},"Claim the recovery"),(0,o.kt)("p",null,"Finally, the recovery is claimed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"pendingRecovery = await pendingRecovery.waitForFullyReady();\nconst claimed = await pendingRecovery.claimRecovery(signer);\n")),(0,o.kt)("h3",{id:"recover-the-lost-balance"},"Recover the lost balance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const recoveredBalance = await claimed.recoveredBalanceState();\nawait recoveredBalance.transfer({\n    signer,\n    destination: NEW_ADDRESS,\n    amount: recoveredBalance.balances[0].available,\n});\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The destination may be any address, not necessarily the new account address.")),(0,o.kt)("h3",{id:"recover-the-lost-vault"},"Recover the lost vault"),(0,o.kt)("p",null,"As for any transfer from a vault, you must wait for one LO's approval."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const newVault = await claimed.vaultState();\nlet recoveredVault = await claimed.recoveredVaultState();\nrecoveredVault = await recoveredVault.createVaultTransferRequest({\n    legalOfficer: alice,\n    amount: recoveredVault.balances[0].available,\n    destination: newVault.vaultAddress,\n    signer,\n});\n\n// ... Wait for LO\'s acceptance ...\nnewVault = await newVault.refresh();\n\n// Check Vault balance\nconst newBalance = newVault.balances[0];\nconsole.log("Balance :%s", `${newBalance.balance.coefficient.toInteger()}.${newBalance.balance.coefficient.toFixedPrecisionDecimals(2)}${newBalance.balance.prefix.symbol}`);\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The destination may be any address, not necessarily the new vault address.")),(0,o.kt)("h3",{id:"rejection-management-1"},"Rejection Management"),(0,o.kt)("p",null,"If rejected by one or more Legal Officer, you may either"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Resubmit the request to the officer who rejected,"),(0,o.kt)("li",{parentName:"ul"},"Or completely cancel your recovery request.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Resubmit to LO who rejected"',title:'"Resubmit',to:!0,LO:!0,who:!0,'rejected"':!0},'let rejectedRecovery = (await authenticatedClient.protectionState()) as RejectedRecovery;\nconst rejecter = rejectedRecovery.protectionParameters.states.find(state => state.status === "REJECTED")!.legalOfficer;\nrejectedRecovery.resubmit(rejecter);\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Cancel the recovery request"',title:'"Cancel',the:!0,recovery:!0,'request"':!0},"let rejectedRecovery = (await authenticatedClient.protectionState()) as RejectedRecovery;\nrejectedRecovery.cancel();\n")))}f.isMDXComponent=!0},9214:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/protection-state-8c445525144bb8dbf0a2c1fb14754030.png"},4873:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/recovery-state-1d40e8678be3fc82f70319821e6fbde1.png"}}]);