"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3510],{3484:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=t(1948),o=t(3460);const r={sidebar_position:1,description:"The basics about the Logion client."},s="Introduction",a={id:"client/introduction",title:"Introduction",description:"The basics about the Logion client.",source:"@site/docs/client/introduction.md",sourceDirName:"client",slug:"/client/introduction",permalink:"/logion-api/docs/client/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/logion-network/logion-api/tree/main/website/docs/client/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"The basics about the Logion client."},sidebar:"tutorialSidebar",previous:{title:"Client",permalink:"/logion-api/docs/category/client"},next:{title:"Authentication",permalink:"/logion-api/docs/client/authentication"}},c={},l=[{value:"Instantiate the client in the browser",id:"instantiate-the-client-in-the-browser",level:2},{value:"Instantiate the client in a Node.JS application",id:"instantiate-the-client-in-a-nodejs-application",level:2},{value:"Instantiate the client in a React Native mobile app",id:"instantiate-the-client-in-a-react-native-mobile-app",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"Each Logion node runs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"a Substrate service for block production,"}),"\n",(0,i.jsx)(n.li,{children:"IPFS/IPFS cluster services running a private IPFS network,"}),"\n",(0,i.jsx)(n.li,{children:"a private database service,"}),"\n",(0,i.jsx)(n.li,{children:"a logion off-chain service exposing a REST API."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In addition to the Logion nodes, a Logion network also includes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"RPC nodes for accessing the chain,"}),"\n",(0,i.jsx)(n.li,{children:"a directory service exposing the identity data of the Logion Legal Officer."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Logion's client interacts with the Logion chain (through RPC nodes), the REST API exposed by each node of the network and the directory.\nThe other services are publicly accessible."}),"\n",(0,i.jsxs)(n.p,{children:["The client's purpose is to merge data coming from the chain and the nodes\nand expose a unified view. In order to access private data, the client has to be authenticated (see ",(0,i.jsx)(n.a,{href:"/logion-api/docs/client/authentication",children:"here"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"The client is able to run in several environments:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"a browser,"}),"\n",(0,i.jsx)(n.li,{children:"a Node.JS application,"}),"\n",(0,i.jsx)(n.li,{children:"a React Native based mobile app."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In function of the environment, the client will be instantiated differently (see below)."}),"\n",(0,i.jsx)(n.p,{children:'Another key concept is data caching. The client needs to interact with many data sources over the network. In order to\noptimize the use of bandwidth, data are cached and retrieved only when needed. The client relies on "states" to handle\nthe different caches. A state is an immutable object, when the developer calls a mutating method on the state, a new\nstate instance is returned and the previous state is discarded.'}),"\n",(0,i.jsxs)(n.p,{children:["Examples of how to work with states are given further in the documentation, see for instance ",(0,i.jsx)(n.a,{href:"/logion-api/docs/client/loc",children:"here"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"There are several Logion networks:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"DEV: the network used for testing new developments, very unstable, should not be used unless part of the Logion developers team."}),"\n",(0,i.jsx)(n.li,{children:"TEST: a stable sandbox network that can be leveraged by developers to test their own developments using the Logion platform."}),"\n",(0,i.jsx)(n.li,{children:"MVP: Logion's production environment. Be sure to test your developments first in TEST before interacting with MVP."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The network to connect to is chosen at client instantiation, see below for examples."}),"\n",(0,i.jsx)(n.h2,{id:"instantiate-the-client-in-the-browser",children:"Instantiate the client in the browser"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { Environment } from \"@logion/client\";\nimport { newLogionClient } from '@logion/client-browser';\n\nconst client = await newLogionClient(Environment.TEST);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"instantiate-the-client-in-a-nodejs-application",children:"Instantiate the client in a Node.JS application"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { Environment } from \"@logion/client\";\nimport { newLogionClient } from '@logion/client-node';\n\nconst client = await newLogionClient(Environment.TEST);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"instantiate-the-client-in-a-react-native-mobile-app",children:"Instantiate the client in a React Native mobile app"}),"\n",(0,i.jsx)(n.p,{children:'The SDK currently supports 2 "frameworks":'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://expo.dev/",children:"Expo"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/itinance/react-native-fs",children:"React Native FS"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"For Expo:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { Environment } from \"@logion/client\";\nimport { newLogionClient } from '@logion/client-expo';\n\nconst client = await newLogionClient(Environment.TEST);\n"})}),"\n",(0,i.jsx)(n.p,{children:"For React Native FS:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { Environment } from \"@logion/client\";\nimport { newLogionClient } from '@logion/client-react-native-fs';\n\nconst client = await newLogionClient(Environment.TEST);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Make sure to check the README of both packages for further instructions about how to\nintegrate the Logion SDK in those environments."})]})}function h(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},3460:(e,n,t)=>{t.d(n,{I:()=>a,M:()=>s});var i=t(6952);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);